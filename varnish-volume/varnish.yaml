apiVersion: v1
kind: Service
metadata:
  name: varnish-svc
  namespace: varnish-volume
spec:
  ports:
  - name: "http"
    port: 80
  selector:
    app: varnish-proxy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: varnish-proxy
  namespace: varnish-volume
spec:
  replicas: 1
  selector:
    matchLabels:
      app: varnish-proxy
  template:
    metadata:
      name: varnish-proxy
      labels:
        app: varnish-proxy
    spec:
      volumes:
        - name: varnish-config
          configMap:
            name: varnish-vcl
            items:
              - key: default.vcl
                path: default.vcl
        - name: varnish-secret
          secret:
            secretName: varnish-secret
        - name: shared-data
          persistentVolumeClaim:
            claimName: task-pv-claim
      containers:
      - name: varnish
        #image: dkruyt/varnish:alpine
        image: jacksonbezerrapaiva/varnish-alpine:latest
        imagePullPolicy: Always
        #args: [",/var/lib/varnish,1G"]
        args: ["-s malloc,512M"]  
        env:
        - name: CACHE_SIZE
          value: 1g
        - name: VCL_CONFIG
          value: /etc/varnish/configmap/default.vcl
        - name: SECRET_FILE
          value: /etc/varnish/k8s-secret/secret
        volumeMounts:
          - name: varnish-config
            mountPath: /etc/varnish
          - name: varnish-secret
            mountPath: /etc/varnish/k8s-secret
          - name: shared-data
            mountPath: /var/lib/varnish
        ports:
        - containerPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: varnish-ingress
  namespace: varnish-volume
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: varnish-volume-poc.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: varnish-svc
            port:
              number: 80
